# Based on: https://github.com/Microsoft/GSL/blob/master/.travis.yml
# But with more recent compilers because of C++17 support
language: generic
sudo: false
notifications:
  email: false

# Safelist
branches:
  only:
    - master
    - fix-travis

os: linux
dist: trusty

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    ##########################################################################
    # Clang on Linux
    ##########################################################################
    # Debug with libc++   --> the libc++ packages on Travis are outdated and dont support C++17
    # - env: CXX=clang++-5.0 CC=clang-5.0 BUILD_TYPE=Debug USE_STDLIB=libc++
    #   addons: &clang50libcpp
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-trusty-5.0
    #       packages:
    #         - ninja-build
    #         - clang-5.0
    #         - gcc-7
    #         - g++-7
    #         - libc++-dev
    #         - libc++abi-dev
    #         - python-dev
    #         - xorg-dev
    #         - libglu1-mesa-dev

    # Debug with stdlibc++
    - env: CXX=clang++-5.0 CC=clang-5.0 BUILD_TYPE=Debug
      addons: &clang50
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - ninja-build
            - clang-5.0
            - gcc-7
            - g++-7
            - libstdc++6
            - python-dev
            - xorg-dev
            - libglu1-mesa-dev

    # Release with libc++
    #- env: COMPILER=clang++-5.0 BUILD_TYPE=Release USE_STDLIB=libc++
    #  addons: *clang50

    # Release with stdlibc++
    #- env: COMPILER=clang++-5.0 BUILD_TYPE=Release
    #  addons: *clang50

    ##########################################################################
    # GCC on Linux
    ##########################################################################
    - env: CXX=g++-7 CC=gcc-7 BUILD_TYPE=Debug
      addons: &gcc7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - ninja-build
            - gcc-7
            - g++-7
            - python-dev
            - xorg-dev
            - libglu1-mesa-dev

    #- env: COMPILER=g++-7 BUILD_TYPE=Release
    #  addons: *gcc7

install:
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"

  # Travis machines have 2 cores
  - JOBS=2

  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - CMAKE_VERSION=3.10.0
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

before_script:
  - export CPP_FLAGS=""
  # Add libc++ flag when specified in USE_STDLIB
  - |
    if [[ "$USE_STDLIB" == "libc++" ]]; then
      export CPP_FLAGS="-stdlib=libc++ ${CPP_FLAGS}"
    fi

  # have CMake to generate build files
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake .. -G Ninja -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CPP_FLAGS}"
  - export LD_LIBRARY_PATH="$PWD/shared_libs/"
  
script:
  # build and run tests
  - cmake --build . -- -j${JOBS}
  # - ctest --output-on-failure -j${JOBS}