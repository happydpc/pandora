function(enable_fma target_name)
	get_target_property(target_type ${target_name} TYPE)

		# MSVC works by default
		if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE -mfma)
		else()
			target_compile_options(${target_name} PUBLIC -mfma)
		endif()
	else()
		message(FATAL "Unknown C++ Compiler ID")
	endif()
endfunction(enable_avx2)

function(enable_avx2 target_name)
	get_target_property(target_type ${target_name} TYPE)

	if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE "/arch:AVX2")
		else()
			target_compile_options(${target_name} PUBLIC "/arch:AVX2")
		endif()
	elseif (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE -mavx2)
		else()
			target_compile_options(${target_name} PUBLIC -mavx2)
		endif()
	else()
		message(FATAL "Unknown C++ Compiler ID")
	endif()
endfunction(enable_avx2)

function(enable_avx512 target_name)
	get_target_property(target_type ${target_name} TYPE)

	if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE "/arch:AVX512")
		else()
			target_compile_options(${target_name} PUBLIC "/arch:AVX512")
		endif()
	elseif (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE -mavx512)
		else()
			target_compile_options(${target_name} PUBLIC -mavx512)
		endif()
	else()
		message(FATAL "Unknown C++ Compiler ID")
	endif()
endfunction(enable_avx512)

function(enable_popcnt target_name)
	get_target_property(target_type ${target_name} TYPE)

	# MSVC works by default
	if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE -mpopcnt)
		else()
			target_compile_options(${target_name} PUBLIC -mpopcnt)
		endif()
	else()
		message(FATAL "Unknown C++ Compiler ID")
	endif()
endfunction(enable_popcnt)

function(enable_bmi2 target_name)
	get_target_property(target_type ${target_name} TYPE)

	# MSVC works by default
	if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
		if (target_type MATCHES "INTERFACE_LIBRARY")
			target_compile_options(${target_name} INTERFACE -mbmi2)
		else()
			target_compile_options(${target_name} PUBLIC -mbmi2)
		endif()
	else()
		message(FATAL "Unknown C++ Compiler ID")
	endif()
endfunction(enable_bmi2)
